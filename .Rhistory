matrix(1:4, 2, 2)
X <- matrix(1:4, 2, 2)
solve(X)
solve(X) * X
solve(X) %*% X
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(solve) m <<- solve
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
c.X <- makeCacheMatrix(X)
c.X
get(c.X)
c.X$get()
X
c.X$set()
c.X$set(y = X)
c.X$set(y = -X)
c.X$set()
c.X$get()
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
m <- solve(data, ...)
x$setinv(inv)
inv
}
cacheSolve(c.X)
cacheSolve(X)
c.X$getinv()
solve(X)
X
c.X$get()
c.X$set(y = X)
solve(X)
solve(-X)
c.X$get()
c.X$getinv()
cacheSolve(c.X)
c.X$get()
c.X$getinv()
c.X$setinv(solve = X)
c.X$getinv()
X
c.X$setinv(solve = solve(X))
c.X$getinv()
cacheSolve(c.X)
X
Y <- matrix(1:9, 3,3)
c.Y <- makeCacheMatrix(Y)
c.Y$get()
c.Y$set(y = Y)
c.Y$get()
c.Y$getinv()
cacheSolve(c.Y)
solve(Y)
Y
Y <- matrix(seq(1,2,9), 3,3)
Y
Y <- matrix(seq(from = 1, to = 2, length.out = 9), 3,3)
Y
solve(Y)
Y <- matrix(c(1,1,1,1,2,1,1,1,1), 3,3)
Y
c.Y <- makeCacheMatrix(Y)
c.Y$get()
c.Y$getinv()
cacheSolve(c.Y)
debug(cacheSolve)
cacheSolve(c.Y)
inv
!is.null(inv)
x$get()
data
undebug(cacheSolve)
c.Y
c.Y$get()
c.Y$getinv()
cacheSolve(c.Y)
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinv(inv)
inv
}
cacheSolve(c.Y)
Y
solve(Y)
X
c.X$get()
c.X$getinv()
cacheSolve(c.X)
c.X$getinv()
c.X$getinv() %*% c.X$get()
c.X$get() %*% c.X$getinv()
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(solve) inv <<- solve
getinv <- function() inv
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
getwd()
source(file = "cachematrix.R")
X <- matrix(1:4, 2, 2)
X
makeCacheMatrix(X)
c.X <- makeCacheMatrix(X)
c.X$get()
c.X$getinv()
cacheSolve(c.X)
c.X$getinv()
cacheSolve(c.X)
c.X$set(y = -X)
c.X$get()
c.X$getinv()
cacheSolve(c.X)
c.X$getinv()
cacheSolve(c.X)
c.X$getinv()
